{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Leaf",
    "patterns": [
        { "include": "#tags" },
        { "include": "text.html.basic" }
    ],
    "repository": {
        "tags": {
            "patterns": [
                {
                    "name": "meta.embedded.tag.leaf.for",
                    "begin": "(#)(for)(?:(\\())",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.leaf" },
                        "2": { "name": "entity.name.tag.leaf.for" },
                        "3": { "name": "punctuation.definition.arguments.begin.leaf" }
                    },
                    "end": "(\\)):",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.arguments.end.leaf" }
                    },
                    "patterns": [
                        { "include": "#for-inner-params" }
                    ]
                },
                {
                    "name": "meta.embedded.tag.leaf",
                    "begin": "(#)(?=[\\w(])(?!for\\b)(\\w+)?(?:(\\())",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.leaf" },
                        "2": { "name": "entity.name.tag.leaf" },
                        "3": { "name": "punctuation.definition.arguments.begin.leaf" }
                    },
                    "end": "(\\)):?",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.arguments.end.leaf" }
                    },
                    "patterns": [
                        { "include": "#inner-params" }
                    ]
                },
				{
                    "name": "meta.embedded.tag.leaf.simple",
                    "match": "(#)([A-Za-z_]\\w*)(?!\\()(?=$|\\b|:)(:)?",
                    "captures": {
                        "1": { "name": "keyword.control.leaf" },
                        "2": { "name": "entity.name.tag.leaf" },
                        "3": { "name": "punctuation.terminator.tag.leaf" }
                    }
                }
            ]
        },
        "for-inner-params": {
            "patterns": [
                {
                    "name": "keyword.control.leaf.in",
                    "match": "\\bin\\b"
                },
                { "include": "#inner-params-common" }
            ]
        },
        "inner-params": {
            "patterns": [
                { "include": "#inner-params-common" }
            ]
        },
        "inner-params-common": {
            "patterns": [
                {
                    "name": "meta.embedded.tag.leaf.nested",
                    "begin": "\\b([a-zA-Z][\\w]*)(\\()",
                    "beginCaptures": {
                        "1": { "name": "entity.name.tag.leaf" },
                        "2": { "name": "punctuation.definition.arguments.begin.leaf" }
                    },
                    "end": "(\\))",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.arguments.end.leaf" }
                    },
                    "patterns": [
                        { "include": "#inner-params" }
                    ]
                },
                {
                    "name": "string.quoted.double.leaf.inner",
                    "match": "\"(?:\\\\.|[^\"\\\\])*\""
                },
                {
                    "name": "meta.embedded.definition.function.body.leaf",
                    "match": "\\."
                },
                {
                    "name": "variable.leaf",
                    "match": "\\b[A-Za-z0-9_$][\\w$]*\\b"
                }
            ]
        }
    },
    "injections": {
        "string.quoted.double.html": {
            "patterns": [
                { "include": "#tags" }
            ]
        },
        "source.js": {
            "patterns": [
                { "include": "#tags" }
            ]
        },
        "string.quoted.double.js": {
            "patterns": [
                { "include": "#tags" }
            ]
        },
        "string.quoted.single.js": {
            "patterns": [
                { "include": "#tags" }
            ]
        }
    },
    "scopeName": "text.html.leaf",
    "fileTypes": ["leaf"],
    "foldingStartMarker": "#(?!else:|elseif\\().+:(?!.*#end\\w+)",
    "foldingStopMarker": "^[^#]*#end\\w+"
}